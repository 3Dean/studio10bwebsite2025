---
// src/components/AnimatedLogo.astro
---

<div class="logo-container">
  <svg xmlns="http://www.w3.org/2000/svg" width="169.98" height="40.74" viewBox="0 0 169.98 40.74" class="studio-logo">
    <defs>
      <linearGradient id="animatedGradient" x1="0" y1="0" x2="1" y2="0">
        <stop id="stop1" offset="0%" stop-color="springgreen" />
        <stop id="stop2" offset="100%" stop-color="magenta" />
      </linearGradient>
    </defs>
    <g>
      <path d="M168.52,0H1.46C.66,0,0,.66,0,1.46v37.82c0,.81.66,1.46,1.46,1.46h167.06c.81,0,1.46-.66,1.46-1.46V1.46c0-.81-.66-1.46-1.46-1.46ZM109.28,37.36H3.39V3.39h105.89v33.97ZM123.54,29.99h-3.26v-10.58c0-.7-.57-1.27-1.3-1.27h-3.17v-3.1h3.29c2.53,0,4.43,1.74,4.43,4.24v10.71h.01ZM143.3,25.75c0,2.5-1.2,3.88-3.7,3.88h-7.82c-2.53,0-4.21-1.38-4.21-3.88v-7.26c0-2.53,1.68-3.66,4.21-3.66h7.82c2.5,0,3.7,1.13,3.7,3.63v7.3h0ZM162.79,25.72c0,2.53-1.9,4.28-4.4,4.28h-4.4c-1.46,0-2.79-1.43-2.98-2.82l-.7,2.82h-2.47V9.09h3.26v5.96h7.29c2.5,0,4.4,1.77,4.4,4.28v6.4h0ZM84.66,29.99h-3.26v-14.95h3.26v14.95ZM11.23,25.24v-.95h3.26v.98c0,.89.73,1.62,1.65,1.62h7.35c.92,0,1.65-.73,1.65-1.65v-2.6c0-.89-.73-1.62-1.65-1.62h-7.32c-2.69,0-4.78-2.06-4.78-4.78v-1.77c0-2.69,2.06-4.75,4.78-4.75h7.44c2.72,0,4.78,2.06,4.78,4.75v.95h-3.26v-.98c0-.89-.73-1.62-1.65-1.62h-7.19c-.92,0-1.65.73-1.65,1.62v1.9c0,.86.76,1.58,1.65,1.58h7.32c2.72,0,4.78,2.06,4.78,4.75v2.53c0,2.72-2.06,4.78-4.78,4.78h-7.6c-2.72,0-4.78-2.06-4.78-4.75h0ZM32.04,25.87v-14.57h3.26v3.74h4.37v3.1h-4.37v7.48c0,.7.57,1.27,1.3,1.27h4.43v3.1h-4.69c-2.53,0-4.31-1.62-4.31-4.12h.01ZM43.89,25.78v-10.74h3.26v10.58c0,.73.57,1.27,1.27,1.27h5.89c.7,0,1.27-.54,1.27-1.27v-10.58h3.26v10.74c0,2.53-1.93,4.21-4.43,4.21h-6.08c-2.5,0-4.43-1.68-4.43-4.21h0ZM67.05,29.99h4.4c1.46,0,2.79-1.43,2.98-2.82l.7,2.82h2.47V9.09h-3.26v5.96h-7.29c-2.5,0-4.4,1.77-4.4,4.28v6.4c0,2.53,1.9,4.28,4.4,4.28v-.02ZM84.66,12.25h-3.26v-3.17h3.26v3.17ZM92.9,29.99h6.08c2.5,0,4.43-1.74,4.43-4.24v-6.46c0-2.5-1.93-4.24-4.43-4.24h-6.08c-2.53,0-4.43,1.74-4.43,4.28v6.43c0,2.5,1.9,4.24,4.43,4.24h0ZM159.53,19.44v6.15c0,.73-.57,1.3-1.27,1.3h-7.16v-8.74h7.16c.7,0,1.27.6,1.27,1.3h0ZM139.28,17.6l-8.93,7.84v-5.99c0-.73.83-1.85,1.56-1.85h7.37ZM131.87,26.87l8.65-7.37v6.12c0,.7-.35,1.23-1.05,1.23h-7.57s-.02.02-.03.02h0ZM91.73,19.44c0-.73.57-1.3,1.3-1.3h5.83c.7,0,1.3.57,1.3,1.27v6.21c0,.7-.6,1.27-1.3,1.27h-5.83c-.73,0-1.3-.57-1.3-1.27v-6.18ZM65.91,19.44c0-.7.57-1.3,1.27-1.3h7.16v8.74h-7.16c-.7,0-1.27-.57-1.27-1.3v-6.15h0Z" fill="url(#animatedGradient)" />
    </g>
  </svg>
</div>

<style>
  .logo-container {
    display: inline-block;
  }
</style>

<script>
  // This script will be client-side hydrated with the client:load directive
  console.log("Logo script running");
  
  function animateLogo() {
    const stop1 = document.getElementById("stop1");
    const stop2 = document.getElementById("stop2");
    
    console.log("Stop elements:", stop1, stop2);
    
    if (!stop1 || !stop2) {
      console.error("Could not find gradient stops");
      return;
    }

    const colors = [
      [0, 255, 127],    // springgreen
      [64, 224, 208],   // turquoise
      [255, 0, 255],    // magenta
      [255, 165, 0],    // orange
    ];

    let index = 0;
    let step = 0;
    const steps = 100;
    let currentColor1 = colors[0];
    let currentColor2 = colors[1];

    function lerpColor(start, end, t) {
      return [
        Math.round(start[0] + (end[0] - start[0]) * t),
        Math.round(start[1] + (end[1] - start[1]) * t),
        Math.round(start[2] + (end[2] - start[2]) * t),
      ];
    }

    function animate() {
      console.log("Animation frame");
      const nextColor1 = colors[(index + 1) % colors.length];
      const nextColor2 = colors[(index + 2) % colors.length];
      const t = step / steps;

      const interpolated1 = lerpColor(currentColor1, nextColor1, t);
      const interpolated2 = lerpColor(currentColor2, nextColor2, t);

      stop1.setAttribute("stop-color", "rgb(" + interpolated1.join(",") + ")");
      stop2.setAttribute("stop-color", "rgb(" + interpolated2.join(",") + ")");

      step++;
      if (step > steps) {
        step = 0;
        index = (index + 1) % colors.length;
        currentColor1 = nextColor1;
        currentColor2 = nextColor2;
      }

      requestAnimationFrame(animate);
    }

    animate();
    console.log("Animation started");
  }

  // Wait a bit to ensure the DOM is fully loaded
  setTimeout(animateLogo, 100);
</script>